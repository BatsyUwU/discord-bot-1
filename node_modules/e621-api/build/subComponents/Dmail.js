"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dmail = /** @class */ (function () {
    function Dmail(pageLimit, requestServices) {
        this.pageLimit = pageLimit;
        this.requestServices = requestServices;
    }
    /** Get your Dmail inbox, will return an empty array if the given `page` number is empty
     * @param {number} [page] Page number to return
     * @returns Array of dmail data
     * @memberof Dmail
     */
    Dmail.prototype.getInbox = function (page) {
        var url = "https://e621.net/dmail/inbox.json?show=in";
        if (page)
            url += "&page=" + page;
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Get your Dmail outbox (sent messages) Will return an empty array if page number is empty
     * @param {number} [page] Page number to return
     * @returns Array of dmail data
     * @memberof Dmail
     */
    Dmail.prototype.getOutbox = function (page) {
        var url = "https://e621.net/dmail/inbox.json?show=out";
        if (page)
            url += "&page=" + page;
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Get ALL dmail messages, will return an empty array if page number is empty
     * @param {number} [page] Page number to return
     * @returns Array of dmail data
     * @memberof Dmail
     */
    Dmail.prototype.getAllMail = function (page) {
        var url = "https://e621.net/dmail/inbox.json?show=all";
        if (page)
            url += "&page=" + page;
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Search your inbox for a message with a given `query` (exact match)
     *
     * **NOTE**: you do NOT need to include the 'Re:' in your `query` string
     * @param {string} query Exact message subject match
     * @param {number} [page] Page number to return
     * @returns Array of dmail data that match your query
     * @memberof Dmail
     */
    Dmail.prototype.searchInbox = function (query, page) {
        var url = "https://e621.net/dmail/inbox.json?show=in&title=" + query;
        if (page)
            url += "&page=" + page;
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Search your outbox for a message with a given `query` (exact match)
     *
     * **NOTE**: you do NOT need to include the 'Re:' in your `query` string
     * @param {string} query Exact message subject match
     * @param {number} [page] Page number to return
     * @returns Array of dmail data that match your query
     * @memberof Dmail
     */
    Dmail.prototype.searchOutbox = function (query, page) {
        var url = "https://e621.net/dmail/inbox.json?show=out&title=" + query;
        if (page)
            url += "&page=" + page;
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Search ALL of your mail for a message with a given `query` (exact match)
     *
     * **NOTE**: you do NOT need to include the 'Re:' in your `query` string
     * @param {string} query Exact message subject match
     * @param {number} [page] Page number to return
     * @returns Array of dmail data that match your query
     * @memberof Dmail
     */
    Dmail.prototype.searchAllMail = function (query, page) {
        var url = "https://e621.net/dmail/inbox.json?show=all&title=" + query;
        if (page)
            url += "&page=" + page;
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /**
     * @param {string} to Who to send the message to (Their user name)
     * @param {string} title Title of the Dmail to send
     * @param {string} body Body of the Dmail to send
     * @returns HTML redirect message on success
     * @memberof Dmail
     */
    Dmail.prototype.create = function (to, title, body) {
        var url = "https://e621.net/dmail/create.json";
        var postObj = {
            "dmail[to_name]": to,
            "dmail[title]": title,
            "dmail[body]": body
        };
        return this.requestServices.post(url, postObj)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Respond to a message with the given `parentID`, automatically
     * adding the 'Re:' title pretext.
     *
     * **NOTE** this will NOT automatically quote the previous message. You will need to do this yourself.
     * @param {string} to Who to send the message to (Their user name)
     * @param {string} title Title of the Dmail to send
     * @param {string} body Body of the Dmail to send
     * @param {number} parentID ID of the parent message to reply ('Re:') to
     * @returns HTML redirect message on success
     * @memberof Dmail
     */
    Dmail.prototype.responsdToParent = function (to, title, body, parentID) {
        var url = "https://e621.net/dmail/create.json";
        var postObj = {
            "dmail[parent_id]": parentID,
            "dmail[to_name]": to,
            "dmail[title]": title,
            "dmail[body]": body
        };
        return this.requestServices.post(url, postObj)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Get a dmail by its `dmailID`
     * @param {number} dmailID ID of the message to retrieve
     * @returns A single dmail's data
     * @memberof Dmail
     */
    Dmail.prototype.getDmailByID = function (dmailID) {
        var url = "https://e621.net/dmail/show.json?id=" + dmailID;
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Mark all Dmails in your inbox as read
     * @returns e621 success boolean
     * @memberof Dmail
     */
    Dmail.prototype.markAllAsRead = function () {
        var url = "https://e621.net/dmail/mark_all_read.json";
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Get a list of ALL of your hidden dmails
     * @param {number} [page] Page number to return
     * @returns Array of dmail data
     * @memberof Dmail
     */
    Dmail.prototype.getHidden = function (page) {
        var url = "https://e621.net/dmail/inbox.json?visibility=hidden";
        if (page)
            url += "&page=" + page;
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Hide a dmail by its `dmailID`
     * @param {number} dmailID ID of the message to hide
     * @returns e621 success boolean
     * @memberof Dmail
     */
    Dmail.prototype.hideDmail = function (dmailID) {
        var url = "https://e621.net/dmail/hide.json";
        return this.requestServices.post(url, { "id": dmailID })
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Unhide a dmail by its `dmailID`
     * @param {number} dmailID ID of the message to unhide
     * @returns e621 success boolean
     * @memberof Dmail
     */
    Dmail.prototype.unhideDmail = function (dmailID) {
        var url = "https://e621.net/dmail/unhide.json";
        return this.requestServices.post(url, { "id": dmailID })
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Hide all dmails in the inbox
     * @returns e621 success boolean
     * @memberof Dmail
     */
    Dmail.prototype.hideAll = function () {
        var url = "https://e621.net/dmail/hide_all.json";
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    /** Unhide all dmails in the inbox
     * @returns e621 success boolean
     * @memberof Dmail
     */
    Dmail.prototype.unhideAll = function () {
        var url = "https://e621.net/dmail/unhide_all.json";
        return this.requestServices.get(url)
            .then(function (response) {
            return response;
        })
            .catch(function (err) {
            throw Error(err);
        });
    };
    return Dmail;
}());
exports.default = Dmail;
