import { RequestServices } from '../RequestService';
import { e621UserInfo } from '../interfaces';
import { e621UserLevels } from '../enums';
export default class Users {
    private pageLimit;
    private requestServices;
    constructor(pageLimit: number, requestServices: RequestServices);
    /** List all users by a set of given options, if no arguments are passed, you will get a listing of all users
     * @param {e621UserLevels} [level] Permission level, optional
     * @param {string} [order] Order of the users, can be `name`, `posts`, `deleted`, `notes`, `tagedits, `date` or `record`
     * @returns Promise<e621UserInfo[]>
     * @memberof Users
     */
    listUsers(level?: e621UserLevels, order?: string): Promise<e621UserInfo[]>;
    /** Get a single user's info by ID (Returns an array from e621 with a single entry)
     * @param {number} userID ID of the user
     * @returns Promise<e621UserInfo[]>
     * @memberof Users
     */
    getUserInfoByID(userID: number): Promise<e621UserInfo[]>;
    /** Get a single user's info by name (Returns an array from e621 with a single entry)
     * @param {string} userName Text exactly matching a user's name
     * @returns Promise<e621UserInfo[]>
     * @memberof Users
     */
    getUserInfoByName(userName: string): Promise<e621UserInfo[]>;
}
